{
	"id": "05f8203c9e849c4d484cc019ec86cb9a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Token is ERC20{\n\n   uint public cost = 1 ether;\n\n   constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol) {\n   _mint(msg.sender, 1000000 * (10 ** 18));\n   totalSupply();\n }\n\n function buyToken(address receiver)public payable {\n   require(msg.value == cost);\n  _mint(receiver, 1000 * (10 ** 18));\n }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5147:5183   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5120:5138   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5005:5189   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6051  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6067  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_73\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6067  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_86\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6070:6080  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6689:6693  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6781  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6797  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6689:6693  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6815:6850  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6940  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6949  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6970:6985  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6951:6967  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6951:6985  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6926:6934  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10273  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":4012:4412   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10332:10353  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10414  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10430  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10439  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_98\n        /* \"#utility.yul\":2841:3194   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10890:11211  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7488:8139  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7614:7632  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":3606:4007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7692:7708  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7808:7827  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7884  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_98\n        /* \"#utility.yul\":3199:3601   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7979:7999  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7999  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8032  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_133\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8075  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8067:8071  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8083  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8132  _afterTokenTransfer(from, to, amount) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_140:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_142:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_144:\n        /* \"#utility.yul\":343:372   */\n      tag_145\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_140\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_147:\n        /* \"#utility.yul\":551:580   */\n      tag_148\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_140\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_149\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_140\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_151:\n        /* \"#utility.yul\":833:862   */\n      tag_152\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_153\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_155:\n        /* \"#utility.yul\":1149:1178   */\n      tag_156\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_159:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_159)\n    tag_161:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5419   */\n    tag_87:\n        /* \"#utility.yul\":5234:5237   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup3\n        /* \"#utility.yul\":5261:5267   */\n      not\n        /* \"#utility.yul\":5258:5259   */\n      dup3\n        /* \"#utility.yul\":5255:5268   */\n      gt\n        /* \"#utility.yul\":5252:5388   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5310:5320   */\n      0x4e487b71\n        /* \"#utility.yul\":5305:5308   */\n      0xe0\n        /* \"#utility.yul\":5301:5321   */\n      shl\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5291:5322   */\n      mstore\n        /* \"#utility.yul\":5345:5349   */\n      0x11\n        /* \"#utility.yul\":5342:5343   */\n      0x04\n        /* \"#utility.yul\":5335:5350   */\n      mstore\n        /* \"#utility.yul\":5373:5377   */\n      0x24\n        /* \"#utility.yul\":5370:5371   */\n      0x00\n        /* \"#utility.yul\":5363:5378   */\n      revert\n        /* \"#utility.yul\":5252:5388   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5404:5413   */\n      add\n      swap1\n        /* \"#utility.yul\":5194:5419   */\n      jump\t// out\n        /* \"#utility.yul\":5424:5804   */\n    tag_65:\n        /* \"#utility.yul\":5503:5504   */\n      0x01\n        /* \"#utility.yul\":5499:5511   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5546:5558   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5567:5628   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5621:5625   */\n      0x7f\n        /* \"#utility.yul\":5613:5619   */\n      dup3\n        /* \"#utility.yul\":5609:5626   */\n      and\n        /* \"#utility.yul\":5599:5626   */\n      swap2\n      pop\n        /* \"#utility.yul\":5567:5628   */\n    tag_175:\n        /* \"#utility.yul\":5674:5676   */\n      0x20\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5663:5677   */\n      lt\n        /* \"#utility.yul\":5643:5661   */\n      dup2\n        /* \"#utility.yul\":5640:5678   */\n      eq\n        /* \"#utility.yul\":5637:5798   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5720:5730   */\n      0x4e487b71\n        /* \"#utility.yul\":5715:5718   */\n      0xe0\n        /* \"#utility.yul\":5711:5731   */\n      shl\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5701:5732   */\n      mstore\n        /* \"#utility.yul\":5755:5759   */\n      0x22\n        /* \"#utility.yul\":5752:5753   */\n      0x04\n        /* \"#utility.yul\":5745:5760   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x24\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5773:5788   */\n      revert\n        /* \"#utility.yul\":5637:5798   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5424:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d74674517a5d877905b682f3ecddc9a500aeac8f2f10f0b7487b7ee8455229464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:5"
															},
															"nodeType": "YulIf",
															"src": "88:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:5"
															},
															"nodeType": "YulIf",
															"src": "221:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:5"
															},
															"nodeType": "YulIf",
															"src": "404:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:5"
															},
															"nodeType": "YulIf",
															"src": "566:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:5",
																"statements": []
															},
															"src": "647:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:5"
															},
															"nodeType": "YulIf",
															"src": "789:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:5",
														"type": ""
													}
												],
												"src": "14:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:5"
															},
															"nodeType": "YulIf",
															"src": "1032:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:5"
															},
															"nodeType": "YulIf",
															"src": "1169:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:5"
															},
															"nodeType": "YulIf",
															"src": "1342:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:5",
														"type": ""
													}
												],
												"src": "904:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:5"
															},
															"nodeType": "YulIf",
															"src": "1614:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:5"
															},
															"nodeType": "YulIf",
															"src": "1684:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:5",
														"type": ""
													}
												],
												"src": "1471:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b6038038062000b608339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108ce80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b8565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077c565b610270565b604051601281526020016100c3565b6100df6101313660046107b8565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b8565b6102e2565b6100df6101883660046107b8565b610379565b6100f361019b366004610749565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610837565b610387565b6060600480546101d59061085d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610837565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b60006020828403121561073957600080fd5b6107428261070b565b9392505050565b6000806040838503121561075c57600080fd5b6107658361070b565b91506107736020840161070b565b90509250929050565b60008060006060848603121561079157600080fd5b61079a8461070b565b92506107a86020850161070b565b9150604084013590509250925092565b600080604083850312156107cb57600080fd5b6107d48361070b565b946020939093013593505050565b600060208083528351808285015260005b8181101561080f578581018301518582016040015282016107f3565b81811115610821576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087157607f821691505b6020821081141561089257634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204d74674517a5d877905b682f3ecddc9a500aeac8f2f10f0b7487b7ee8455229464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB60 CODESIZE SUB DUP1 PUSH3 0xB60 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8CE DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x837 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x742 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x765 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH2 0x773 PUSH1 0x20 DUP5 ADD PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79A DUP5 PUSH2 0x70B JUMP JUMPDEST SWAP3 POP PUSH2 0x7A8 PUSH1 0x20 DUP6 ADD PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x858 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x871 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x892 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH21 0x674517A5D877905B682F3ECDDC9A500AEAC8F2F10F SIGNEXTEND PUSH21 0x87B7EE8455229464736F6C63430008070033000000 ",
							"sourceMap": "1403:11223:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:0;;;-1:-1:-1;1403:11223:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:5;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:5;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:5;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:5:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:5;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1403:11223:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_586": {
									"entryPoint": null,
									"id": 586,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_521": {
									"entryPoint": 903,
									"id": 521,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_702": {
									"entryPoint": null,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_564": {
									"entryPoint": 1195,
									"id": 564,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_348": {
									"entryPoint": 1341,
									"id": 348,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 600,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_271": {
									"entryPoint": 738,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_229": {
									"entryPoint": 660,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 454,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 723,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 624,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 889,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:5"
															},
															"nodeType": "YulIf",
															"src": "762:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:5",
														"type": ""
													}
												],
												"src": "648:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:5"
															},
															"nodeType": "YulIf",
															"src": "1078:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:5",
														"type": ""
													}
												],
												"src": "981:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:5",
														"type": ""
													}
												],
												"src": "1240:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:5",
																"statements": []
															},
															"src": "1712:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:5"
															},
															"nodeType": "YulIf",
															"src": "1861:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:5",
														"type": ""
													}
												],
												"src": "1432:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:5",
														"type": ""
													}
												],
												"src": "2034:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:5",
														"type": ""
													}
												],
												"src": "2438:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:5",
														"type": ""
													}
												],
												"src": "2841:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:5",
														"type": ""
													}
												],
												"src": "3199:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:5",
														"type": ""
													}
												],
												"src": "3606:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:5",
														"type": ""
													}
												],
												"src": "4012:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:5",
														"type": ""
													}
												],
												"src": "4417:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:5",
														"type": ""
													}
												],
												"src": "4823:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5071:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5082:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:5",
														"type": ""
													}
												],
												"src": "5005:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5277:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5305:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5310:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5301:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5301:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5291:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5291:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5342:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5345:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5335:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5335:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5370:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5373:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5363:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5363:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5363:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5265:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:5"
															},
															"nodeType": "YulIf",
															"src": "5252:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5397:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5411:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5225:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5228:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5234:3:5",
														"type": ""
													}
												],
												"src": "5194:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5489:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5503:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5506:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5520:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5550:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5556:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5524:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5597:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5599:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5613:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5609:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5577:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5570:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5570:26:5"
															},
															"nodeType": "YulIf",
															"src": "5567:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5687:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5715:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5720:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5711:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5711:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5752:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5755:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5643:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5674:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5663:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:38:5"
															},
															"nodeType": "YulIf",
															"src": "5637:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5459:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5468:6:5",
														"type": ""
													}
												],
												"src": "5424:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b8565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077c565b610270565b604051601281526020016100c3565b6100df6101313660046107b8565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b8565b6102e2565b6100df6101883660046107b8565b610379565b6100f361019b366004610749565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610837565b610387565b6060600480546101d59061085d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610837565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b60006020828403121561073957600080fd5b6107428261070b565b9392505050565b6000806040838503121561075c57600080fd5b6107658361070b565b91506107736020840161070b565b90509250929050565b60008060006060848603121561079157600080fd5b61079a8461070b565b92506107a86020850161070b565b9150604084013590509250925092565b600080604083850312156107cb57600080fd5b6107d48361070b565b946020939093013593505050565b600060208083528351808285015260005b8181101561080f578581018301518582016040015282016107f3565b81811115610821576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087157607f821691505b6020821081141561089257634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204d74674517a5d877905b682f3ecddc9a500aeac8f2f10f0b7487b7ee8455229464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x837 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x85D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x742 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x765 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH2 0x773 PUSH1 0x20 DUP5 ADD PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79A DUP5 PUSH2 0x70B JUMP JUMPDEST SWAP3 POP PUSH2 0x7A8 PUSH1 0x20 DUP6 ADD PUSH2 0x70B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x858 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x871 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x892 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH21 0x674517A5D877905B682F3ECDDC9A500AEAC8F2F10F SIGNEXTEND PUSH21 0x87B7EE8455229464736F6C63430008070033000000 ",
							"sourceMap": "1403:11223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:5;;1398:22;1380:41;;1368:2;1353:18;4433:197:0;1240:187:5;3244:106:0;3331:12;;3244:106;;;4969:25:5;;;4957:2;4942:18;3244:106:0;4823:177:5;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5147:36:5;;5135:2;5120:18;3093:91:0;5005:184:5;5873:236:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:236::-;719:10:3;5961:4:0;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:0;;;;;;;;;;5961:4;;719:10:3;6015:66:0;;719:10:3;;6040:27:0;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:3;6689:4:0;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:0;;;;;;;;;;6689:4;;719:10:3;6815:35:0;;;;6807:85;;;;-1:-1:-1;;;6807:85:0;;4619:2:5;6807:85:0;;;4601:21:5;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:5;;;4741:35;4793:19;;6807:85:0;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;10123:370::-;-1:-1:-1;;;;;10254:19:0;;10246:68;;;;-1:-1:-1;;;10246:68:0;;4214:2:5;10246:68:0;;;4196:21:5;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:5;;;4336:34;4387:19;;10246:68:0;4012:400:5;10246:68:0;-1:-1:-1;;;;;10332:21:0;;10324:68;;;;-1:-1:-1;;;10324:68:0;;2640:2:5;10324:68:0;;;2622:21:5;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:5;;;2762:32;2811:19;;10324:68:0;2438:398:5;10324:68:0;-1:-1:-1;;;;;10403:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;4969:25:5;;;10454:32:0;;4942:18:5;10454:32:0;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:0;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:0;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:0;;3043:2:5;11019:68:0;;;3025:21:5;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11019:68:0;2841:353:5;11019:68:0;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:0;;7606:68;;;;-1:-1:-1;;;7606:68:0;;3808:2:5;7606:68:0;;;3790:21:5;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:5;;;3930:35;3982:19;;7606:68:0;3606:401:5;7606:68:0;-1:-1:-1;;;;;7692:16:0;;7684:64;;;;-1:-1:-1;;;7684:64:0;;2236:2:5;7684:64:0;;;2218:21:5;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:5;;;2358:33;2408:19;;7684:64:0;2034:399:5;7684:64:0;-1:-1:-1;;;;;7830:15:0;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:0;;3401:2:5;7855:72:0;;;3383:21:5;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:5;;;3523:36;3576:19;;7855:72:0;3199:402:5;7855:72:0;-1:-1:-1;;;;;7961:15:0;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:0;8067:4;-1:-1:-1;;;;;8058:26:0;;8077:6;8058:26;;;;4969:25:5;;4957:2;4942:18;;4823:177;8058:26:0;;;;;;;;8095:37;11795:121;14:173:5;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:5:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:5;1992:15;-1:-1:-1;;1988:29:5;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:5:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:136;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:136;-1:-1:-1;5404:9:5;;5194:225::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "450800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26966",
								"increaseAllowance(address,uint256)": "26945",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d74674517a5d877905b682f3ecddc9a500aeac8f2f10f0b7487b7ee8455229464736f6c63430008070033",
									".code": [
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5005,
											"end": 5189,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6935,
											"end": 6940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4012,
											"end": 4412,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2841,
											"end": 3194,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3606,
											"end": 4007,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7808,
											"end": 7827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3199,
											"end": 3601,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8077,
											"end": 8083,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5305,
											"end": 5308,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5349,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5378,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5663,
											"end": 5677,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5640,
											"end": 5678,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":113:447  contract Token is ERC20{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":161:168  1 ether */\n  0x0de0b6b3a7640000\n    /* \"contracts/ERC20.sol\":142:168  uint public cost = 1 ether */\n  0x05\n  sstore\n    /* \"contracts/ERC20.sol\":174:318  constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n    /* \"contracts/ERC20.sol\":236:241  _name */\n  dup3\n  swap1\n    /* \"contracts/ERC20.sol\":243:250  _symbol */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_7\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":257:296  _mint(msg.sender, 1000000 * (10 ** 18)) */\n  tag_11\n    /* \"contracts/ERC20.sol\":263:273  msg.sender */\n  caller\n    /* \"contracts/ERC20.sol\":275:295  1000000 * (10 ** 18) */\n  0xd3c21bcecceda1000000\n    /* \"contracts/ERC20.sol\":257:262  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/ERC20.sol\":257:296  _mint(msg.sender, 1000000 * (10 ** 18)) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/ERC20.sol\":174:318  constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol) {... */\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":113:447  contract Token is ERC20{... */\n  jump(tag_43)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8415:8804  function _mint(address account, uint256 amount) internal virtual {... */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8498:8519  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1673:1675   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1655:1676   */\n  mstore\n    /* \"#utility.yul\":1712:1714   */\n  0x1f\n    /* \"#utility.yul\":1692:1710   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1685:1715   */\n  mstore\n    /* \"#utility.yul\":1751:1784   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":1731:1749   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1724:1785   */\n  mstore\n    /* \"#utility.yul\":1802:1820   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8648  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8626:8638  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8626:8648  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8676  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8667  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8676  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8680:8686  amount */\n  dup4\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8667  _balances */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n  tag_24\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8680:8686  amount */\n  dup5\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n  tag_23\n  jump\t// in\ntag_24:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":1977:2002   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8719  0 */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":1965:1967   */\n  0x20\n    /* \"#utility.yul\":1950:1968   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8415:8804  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20.sol\":113:447  contract Token is ERC20{... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_32\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_35\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_38)\ntag_35:\n  dup3\n  0x1f\n  lt\n  tag_36\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_38)\ntag_36:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_38\n  jumpi\n  swap2\n  dup3\n  add\ntag_37:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_38\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_37)\ntag_38:\n  pop\n  tag_39\n  swap3\n  swap2\n  pop\n  tag_40\n  jump\t// in\ntag_39:\n  pop\n  swap1\n  jump\t// out\ntag_40:\ntag_41:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_39\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_41)\n    /* \"#utility.yul\":14:899   */\ntag_44:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_46:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_51\n  tag_49\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_52:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_53:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_56:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_58:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_59:\n    /* \"#utility.yul\":1222:1283   */\n  tag_60\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_44\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_62\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_44\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2013:2238   */\ntag_23:\n    /* \"#utility.yul\":2053:2056   */\n  0x00\n    /* \"#utility.yul\":2084:2085   */\n  dup3\n    /* \"#utility.yul\":2080:2086   */\n  not\n    /* \"#utility.yul\":2077:2078   */\n  dup3\n    /* \"#utility.yul\":2074:2087   */\n  gt\n    /* \"#utility.yul\":2071:2207   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2129:2139   */\n  0x4e487b71\n    /* \"#utility.yul\":2124:2127   */\n  0xe0\n    /* \"#utility.yul\":2120:2140   */\n  shl\n    /* \"#utility.yul\":2117:2118   */\n  0x00\n    /* \"#utility.yul\":2110:2141   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x11\n    /* \"#utility.yul\":2161:2162   */\n  0x04\n    /* \"#utility.yul\":2154:2169   */\n  mstore\n    /* \"#utility.yul\":2192:2196   */\n  0x24\n    /* \"#utility.yul\":2189:2190   */\n  0x00\n    /* \"#utility.yul\":2182:2197   */\n  revert\n    /* \"#utility.yul\":2071:2207   */\ntag_66:\n  pop\n    /* \"#utility.yul\":2223:2232   */\n  add\n  swap1\n    /* \"#utility.yul\":2013:2238   */\n  jump\t// out\n    /* \"#utility.yul\":2243:2623   */\ntag_33:\n    /* \"#utility.yul\":2322:2323   */\n  0x01\n    /* \"#utility.yul\":2318:2330   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2365:2377   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2386:2447   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2440:2444   */\n  0x7f\n    /* \"#utility.yul\":2432:2438   */\n  dup3\n    /* \"#utility.yul\":2428:2445   */\n  and\n    /* \"#utility.yul\":2418:2445   */\n  swap2\n  pop\n    /* \"#utility.yul\":2386:2447   */\ntag_68:\n    /* \"#utility.yul\":2493:2495   */\n  0x20\n    /* \"#utility.yul\":2485:2491   */\n  dup3\n    /* \"#utility.yul\":2482:2496   */\n  lt\n    /* \"#utility.yul\":2462:2480   */\n  dup2\n    /* \"#utility.yul\":2459:2497   */\n  eq\n    /* \"#utility.yul\":2456:2617   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2539:2549   */\n  0x4e487b71\n    /* \"#utility.yul\":2534:2537   */\n  0xe0\n    /* \"#utility.yul\":2530:2550   */\n  shl\n    /* \"#utility.yul\":2527:2528   */\n  0x00\n    /* \"#utility.yul\":2520:2551   */\n  mstore\n    /* \"#utility.yul\":2574:2578   */\n  0x22\n    /* \"#utility.yul\":2571:2572   */\n  0x04\n    /* \"#utility.yul\":2564:2579   */\n  mstore\n    /* \"#utility.yul\":2602:2606   */\n  0x24\n    /* \"#utility.yul\":2599:2600   */\n  0x00\n    /* \"#utility.yul\":2592:2607   */\n  revert\n    /* \"#utility.yul\":2456:2617   */\ntag_69:\n  pop\n    /* \"#utility.yul\":2243:2623   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2628:2755   */\ntag_49:\n    /* \"#utility.yul\":2689:2699   */\n  0x4e487b71\n    /* \"#utility.yul\":2684:2687   */\n  0xe0\n    /* \"#utility.yul\":2680:2700   */\n  shl\n    /* \"#utility.yul\":2677:2678   */\n  0x00\n    /* \"#utility.yul\":2670:2701   */\n  mstore\n    /* \"#utility.yul\":2720:2724   */\n  0x41\n    /* \"#utility.yul\":2717:2718   */\n  0x04\n    /* \"#utility.yul\":2710:2725   */\n  mstore\n    /* \"#utility.yul\":2744:2748   */\n  0x24\n    /* \"#utility.yul\":2741:2742   */\n  0x00\n    /* \"#utility.yul\":2734:2749   */\n  revert\n    /* \"#utility.yul\":2628:2755   */\ntag_43:\n    /* \"contracts/ERC20.sol\":113:447  contract Token is ERC20{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":113:447  contract Token is ERC20{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7e72fb52\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13faede6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"contracts/ERC20.sol\":142:168  uint public cost = 1 ether */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      sload(0x05)\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":5329:5354   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5317:5319   */\n      0x20\n        /* \"#utility.yul\":5302:5320   */\n      add\n        /* \"contracts/ERC20.sol\":142:168  uint public cost = 1 ether */\n      tag_20\n        /* \"#utility.yul\":5183:5360   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_23\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5507:5543   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5495:5497   */\n      0x20\n        /* \"#utility.yul\":5480:5498   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":5365:5549   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_23\n      tag_51\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_30\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20.sol\":321:444  function buyToken(address receiver)public payable {... */\n    tag_10:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_18\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_23\n      tag_69\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_23\n      tag_74\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_30\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6109  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6051  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6058  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6067  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_93\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6067  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6070:6080  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6080  _allowances[owner][spender] + addedValue */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6081  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":321:444  function buyToken(address receiver)public payable {... */\n    tag_62:\n        /* \"contracts/ERC20.sol\":397:401  cost */\n      sload(0x05)\n        /* \"contracts/ERC20.sol\":384:393  msg.value */\n      callvalue\n        /* \"contracts/ERC20.sol\":384:401  msg.value == cost */\n      eq\n        /* \"contracts/ERC20.sol\":376:402  require(msg.value == cost) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"contracts/ERC20.sol\":406:440  _mint(receiver, 1000 * (10 ** 18)) */\n      tag_111\n        /* \"contracts/ERC20.sol\":412:420  receiver */\n      dup2\n        /* \"contracts/ERC20.sol\":422:439  1000 * (10 ** 18) */\n      0x3635c9adc5dea00000\n        /* \"contracts/ERC20.sol\":406:411  _mint */\n      tag_112\n        /* \"contracts/ERC20.sol\":406:440  _mint(receiver, 1000 * (10 ** 18)) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/ERC20.sol\":321:444  function buyToken(address receiver)public payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6596:7025  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6689:6693  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6781  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6788  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6797  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6689:6693  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6815:6850  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6892  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6940  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6949  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6970:6985  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6951:6967  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6951:6985  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6926:6934  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6926:6986  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10273  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_122\n        /* \"#utility.yul\":4012:4412   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10246:10314  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10332:10353  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_122\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10324:10392  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10414  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10421  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10430  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10403:10439  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5329:5354   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5302:5320   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10454:10486  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10123:10493  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_122\n        /* \"#utility.yul\":2841:3194   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10890:11211  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7488:8139  function _transfer(... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7614:7632  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n        /* \"#utility.yul\":3606:4007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7606:7674  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7692:7708  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_122\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7684:7748  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7808:7827  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7830:7845  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7884  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_122\n        /* \"#utility.yul\":3199:3601   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7855:7927  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7976  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7979:7999  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7999  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8032  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7961:7970  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_157\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7993:7999  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8019:8042  _balances[to] += amount */\n      tag_107\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8075  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8067:8071  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8083  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_158\n      swap2\n        /* \"#utility.yul\":5329:5354   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5317:5319   */\n      0x20\n        /* \"#utility.yul\":5302:5320   */\n      add\n      swap1\n        /* \"#utility.yul\":5183:5360   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8084  Transfer(from, to, amount) */\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8095:8132  _afterTokenTransfer(from, to, amount) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8415:8804  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8498:8519  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5025:5027   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5007:5028   */\n      mstore\n        /* \"#utility.yul\":5064:5066   */\n      0x1f\n        /* \"#utility.yul\":5044:5062   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5037:5067   */\n      mstore\n        /* \"#utility.yul\":5103:5136   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":5083:5101   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5076:5137   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_122\n        /* \"#utility.yul\":4823:5178   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8490:8555  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8648  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8626:8638  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8626:8648  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_166\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_166:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8676  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8667  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8676  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8680:8686  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8667  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n      tag_167\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8680:8686  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8658:8686  _balances[account] += amount */\n      tag_107\n      jump\t// in\n    tag_167:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":5329:5354   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8719  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":5317:5319   */\n      0x20\n        /* \"#utility.yul\":5302:5320   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8701:8738  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8415:8804  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_173:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_175:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_57:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_177:\n        /* \"#utility.yul\":343:372   */\n      tag_178\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_173\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_80:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_180:\n        /* \"#utility.yul\":551:580   */\n      tag_181\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_173\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_182\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_173\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_41:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_184:\n        /* \"#utility.yul\":833:862   */\n      tag_185\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_173\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_186\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_173\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_25:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_188:\n        /* \"#utility.yul\":1149:1178   */\n      tag_189\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_21:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_192:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_192)\n    tag_194:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_195:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5554:5779   */\n    tag_107:\n        /* \"#utility.yul\":5594:5597   */\n      0x00\n        /* \"#utility.yul\":5625:5626   */\n      dup3\n        /* \"#utility.yul\":5621:5627   */\n      not\n        /* \"#utility.yul\":5618:5619   */\n      dup3\n        /* \"#utility.yul\":5615:5628   */\n      gt\n        /* \"#utility.yul\":5612:5748   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5670:5680   */\n      0x4e487b71\n        /* \"#utility.yul\":5665:5668   */\n      0xe0\n        /* \"#utility.yul\":5661:5681   */\n      shl\n        /* \"#utility.yul\":5658:5659   */\n      0x00\n        /* \"#utility.yul\":5651:5682   */\n      mstore\n        /* \"#utility.yul\":5705:5709   */\n      0x11\n        /* \"#utility.yul\":5702:5703   */\n      0x04\n        /* \"#utility.yul\":5695:5710   */\n      mstore\n        /* \"#utility.yul\":5733:5737   */\n      0x24\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5723:5738   */\n      revert\n        /* \"#utility.yul\":5612:5748   */\n    tag_207:\n      pop\n        /* \"#utility.yul\":5764:5773   */\n      add\n      swap1\n        /* \"#utility.yul\":5554:5779   */\n      jump\t// out\n        /* \"#utility.yul\":5784:6164   */\n    tag_85:\n        /* \"#utility.yul\":5863:5864   */\n      0x01\n        /* \"#utility.yul\":5859:5871   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5906:5918   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5927:5988   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5981:5985   */\n      0x7f\n        /* \"#utility.yul\":5973:5979   */\n      dup3\n        /* \"#utility.yul\":5969:5986   */\n      and\n        /* \"#utility.yul\":5959:5986   */\n      swap2\n      pop\n        /* \"#utility.yul\":5927:5988   */\n    tag_209:\n        /* \"#utility.yul\":6034:6036   */\n      0x20\n        /* \"#utility.yul\":6026:6032   */\n      dup3\n        /* \"#utility.yul\":6023:6037   */\n      lt\n        /* \"#utility.yul\":6003:6021   */\n      dup2\n        /* \"#utility.yul\":6000:6038   */\n      eq\n        /* \"#utility.yul\":5997:6158   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":6080:6090   */\n      0x4e487b71\n        /* \"#utility.yul\":6075:6078   */\n      0xe0\n        /* \"#utility.yul\":6071:6091   */\n      shl\n        /* \"#utility.yul\":6068:6069   */\n      0x00\n        /* \"#utility.yul\":6061:6092   */\n      mstore\n        /* \"#utility.yul\":6115:6119   */\n      0x22\n        /* \"#utility.yul\":6112:6113   */\n      0x04\n        /* \"#utility.yul\":6105:6120   */\n      mstore\n        /* \"#utility.yul\":6143:6147   */\n      0x24\n        /* \"#utility.yul\":6140:6141   */\n      0x00\n        /* \"#utility.yul\":6133:6148   */\n      revert\n        /* \"#utility.yul\":5997:6158   */\n    tag_210:\n      pop\n        /* \"#utility.yul\":5784:6164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c590dc89ca478df1ccd27da36f7530f173ea1b2cdb8f7261672517d015461bc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_746": {
									"entryPoint": null,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_586": {
									"entryPoint": null,
									"id": 586,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_404": {
									"entryPoint": 150,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2757:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:5"
															},
															"nodeType": "YulIf",
															"src": "88:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:5"
															},
															"nodeType": "YulIf",
															"src": "221:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:5"
															},
															"nodeType": "YulIf",
															"src": "404:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:5"
															},
															"nodeType": "YulIf",
															"src": "566:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:5",
																"statements": []
															},
															"src": "647:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:5"
															},
															"nodeType": "YulIf",
															"src": "789:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:5",
														"type": ""
													}
												],
												"src": "14:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:5"
															},
															"nodeType": "YulIf",
															"src": "1032:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:5"
															},
															"nodeType": "YulIf",
															"src": "1169:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:5"
															},
															"nodeType": "YulIf",
															"src": "1342:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:5",
														"type": ""
													}
												],
												"src": "904:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1645:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1662:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1655:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1655:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1696:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1707:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1731:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1751:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1724:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1794:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1622:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1636:4:5",
														"type": ""
													}
												],
												"src": "1471:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1950:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1950:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1942:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1984:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1995:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1901:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1912:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1923:4:5",
														"type": ""
													}
												],
												"src": "1831:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2061:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2117:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2124:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2129:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2120:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2120:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2110:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2110:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2161:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2164:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2154:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2154:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2154:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2189:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2192:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2182:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2182:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2182:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2077:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2084:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2080:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2080:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2074:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:13:5"
															},
															"nodeType": "YulIf",
															"src": "2071:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2216:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2227:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2230:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2044:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2047:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2053:3:5",
														"type": ""
													}
												],
												"src": "2013:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2298:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2308:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2322:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2325:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2318:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2339:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2369:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2375:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2365:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2343:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2416:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2418:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2432:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2440:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2428:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2428:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2418:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2396:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:26:5"
															},
															"nodeType": "YulIf",
															"src": "2386:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2506:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2527:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2534:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2539:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2530:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2530:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2520:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2520:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2520:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2571:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2574:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2564:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2564:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2564:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2592:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2592:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2592:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2462:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2485:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2493:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2482:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2482:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2459:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:38:5"
															},
															"nodeType": "YulIf",
															"src": "2456:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2278:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2287:6:5",
														"type": ""
													}
												],
												"src": "2243:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2684:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2689:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2680:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2680:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2670:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2670:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2717:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2720:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2710:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2741:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2744:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2734:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2628:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006005553480156200001d57600080fd5b5060405162000e7738038062000e778339810160408190526200004091620002db565b815182908290620000599060039060208501906200017e565b5080516200006f9060049060208401906200017e565b5050506200008e3369d3c21bcecceda10000006200009660201b60201c565b5050620003bf565b6001600160a01b038216620000f15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000105919062000345565b90915550506001600160a01b038216600090815260208190526040812080548392906200013490849062000345565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200018c906200036c565b90600052602060002090601f016020900481019282620001b05760008555620001fb565b82601f10620001cb57805160ff1916838001178555620001fb565b82800160010185558215620001fb579182015b82811115620001fb578251825591602001919060010190620001de565b50620002099291506200020d565b5090565b5b808211156200020957600081556001016200020e565b600082601f8301126200023657600080fd5b81516001600160401b0380821115620002535762000253620003a9565b604051601f8301601f19908116603f011681019082821181831017156200027e576200027e620003a9565b816040528381526020925086838588010111156200029b57600080fd5b600091505b83821015620002bf5785820183015181830184015290820190620002a0565b83821115620002d15760008385830101525b9695505050505050565b60008060408385031215620002ef57600080fd5b82516001600160401b03808211156200030757600080fd5b620003158683870162000224565b935060208501519150808211156200032c57600080fd5b506200033b8582860162000224565b9150509250929050565b600082198211156200036757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200038157607f821691505b60208210811415620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610aa880620003cf6000396000f3fe6080604052600436106100c25760003560e01c8063395093511161007f57806395d89b411161005957806395d89b4114610202578063a457c2d714610217578063a9059cbb14610237578063dd62ed3e1461025757600080fd5b8063395093511461019757806370a08231146101b75780637e72fb52146101ed57600080fd5b806306fdde03146100c7578063095ea7b3146100f257806313faede61461012257806318160ddd1461014657806323b872dd1461015b578063313ce5671461017b575b600080fd5b3480156100d357600080fd5b506100dc61029d565b6040516100e991906109bc565b60405180910390f35b3480156100fe57600080fd5b5061011261010d366004610992565b61032f565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860055481565b6040519081526020016100e9565b34801561015257600080fd5b50600254610138565b34801561016757600080fd5b50610112610176366004610956565b610347565b34801561018757600080fd5b50604051601281526020016100e9565b3480156101a357600080fd5b506101126101b2366004610992565b61036b565b3480156101c357600080fd5b506101386101d2366004610901565b6001600160a01b031660009081526020819052604090205490565b6102006101fb366004610901565b6103aa565b005b34801561020e57600080fd5b506100dc6103ce565b34801561022357600080fd5b50610112610232366004610992565b6103dd565b34801561024357600080fd5b50610112610252366004610992565b610474565b34801561026357600080fd5b50610138610272366004610923565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102ac90610a37565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610a37565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60003361033d818585610482565b5060019392505050565b6000336103558582856105a6565b610360858585610638565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061033d90829086906103a5908790610a11565b610482565b60055434146103b857600080fd5b6103cb81683635c9adc5dea00000610806565b50565b6060600480546102ac90610a37565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103608286868403610482565b60003361033d818585610638565b6001600160a01b0383166104e45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045e565b6001600160a01b0382166105455760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461063257818110156106255760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161045e565b6106328484848403610482565b50505050565b6001600160a01b03831661069c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045e565b6001600160a01b0382166106fe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045e565b6001600160a01b038316600090815260208190526040902054818110156107765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161045e565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107ad908490610a11565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107f991815260200190565b60405180910390a3610632565b6001600160a01b03821661085c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045e565b806002600082825461086e9190610a11565b90915550506001600160a01b0382166000908152602081905260408120805483929061089b908490610a11565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146108fc57600080fd5b919050565b60006020828403121561091357600080fd5b61091c826108e5565b9392505050565b6000806040838503121561093657600080fd5b61093f836108e5565b915061094d602084016108e5565b90509250929050565b60008060006060848603121561096b57600080fd5b610974846108e5565b9250610982602085016108e5565b9150604084013590509250925092565b600080604083850312156109a557600080fd5b6109ae836108e5565b946020939093013593505050565b600060208083528351808285015260005b818110156109e9578581018301518582016040015282016109cd565b818111156109fb576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a3257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610a4b57607f821691505b60208210811415610a6c57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200c590dc89ca478df1ccd27da36f7530f173ea1b2cdb8f7261672517d015461bc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE77 CODESIZE SUB DUP1 PUSH3 0xE77 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x40 SWAP2 PUSH3 0x2DB JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x59 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x17E JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x6F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x17E JUMP JUMPDEST POP POP POP PUSH3 0x8E CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x3BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x105 SWAP2 SWAP1 PUSH3 0x345 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x134 SWAP1 DUP5 SWAP1 PUSH3 0x345 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x18C SWAP1 PUSH3 0x36C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1B0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1FB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1CB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1FB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1FB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1FB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1DE JUMP JUMPDEST POP PUSH3 0x209 SWAP3 SWAP2 POP PUSH3 0x20D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x209 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x20E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x253 JUMPI PUSH3 0x253 PUSH3 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x27E JUMPI PUSH3 0x27E PUSH3 0x3A9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x315 DUP7 DUP4 DUP8 ADD PUSH3 0x224 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x33B DUP6 DUP3 DUP7 ADD PUSH3 0x224 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x367 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x381 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAA8 DUP1 PUSH3 0x3CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x3CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xA37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xA37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x33D DUP2 DUP6 DUP6 PUSH2 0x482 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP6 DUP3 DUP6 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x360 DUP6 DUP6 DUP6 PUSH2 0x638 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x33D SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x3A5 SWAP1 DUP8 SWAP1 PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CB DUP2 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x806 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xA37 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x360 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x482 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x33D DUP2 DUP6 DUP6 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x632 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45E JUMP JUMPDEST PUSH2 0x632 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x482 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xA11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7F9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xA11 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x89B SWAP1 DUP5 SWAP1 PUSH2 0xA11 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91C DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93F DUP4 PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x94D PUSH1 0x20 DUP5 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x974 DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP3 POP PUSH2 0x982 PUSH1 0x20 DUP6 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP4 PUSH2 0x8E5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9CD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA4B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA6C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC MSIZE 0xD 0xC8 SWAP13 LOG4 PUSH25 0xDF1CCD27DA36F7530F173EA1B2CDB8F7261672517D015461BC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "113:334:4:-:0;;;161:7;142:26;;174:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13:0;;236:5:4;;243:7;;2044:13:0;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;257:39:4::1;263:10;275:20;257:5;;;:39;;:::i;:::-;174:144:::0;;113:334;;8415:389:0;-1:-1:-1;;;;;8498:21:0;;8490:65;;;;-1:-1:-1;;;8490:65:0;;1673:2:5;8490:65:0;;;1655:21:5;1712:2;1692:18;;;1685:30;1751:33;1731:18;;;1724:61;1802:18;;8490:65:0;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:0;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:0;;1977:25:5;;;-1:-1:-1;;;;;8701:37:0;;;8718:1;;8701:37;;1965:2:5;1950:18;8701:37:0;;;;;;;8415:389;;:::o;113:334:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;113:334:4;;;-1:-1:-1;113:334:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:5;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:5;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:5;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:5:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:5;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;2013:225::-;2053:3;2084:1;2080:6;2077:1;2074:13;2071:136;;;2129:10;2124:3;2120:20;2117:1;2110:31;2164:4;2161:1;2154:15;2192:4;2189:1;2182:15;2071:136;-1:-1:-1;2223:9:5;;2013:225::o;2243:380::-;2322:1;2318:12;;;;2365;;;2386:61;;2440:4;2432:6;2428:17;2418:27;;2386:61;2493:2;2485:6;2482:14;2462:18;2459:38;2456:161;;;2539:10;2534:3;2530:20;2527:1;2520:31;2574:4;2571:1;2564:15;2602:4;2599:1;2592:15;2456:161;;2243:380;;;:::o;2628:127::-;2689:10;2684:3;2680:20;2677:1;2670:31;2720:4;2717:1;2710:15;2744:4;2741:1;2734:15;2628:127;113:334:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_586": {
									"entryPoint": null,
									"id": 586,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_521": {
									"entryPoint": 1154,
									"id": 521,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_404": {
									"entryPoint": 2054,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_702": {
									"entryPoint": null,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_564": {
									"entryPoint": 1446,
									"id": 564,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_348": {
									"entryPoint": 1592,
									"id": 348,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 815,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyToken_769": {
									"entryPoint": 938,
									"id": 769,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cost_720": {
									"entryPoint": null,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_271": {
									"entryPoint": 989,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_229": {
									"entryPoint": 875,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 669,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 974,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 839,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 1140,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6166:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:5"
															},
															"nodeType": "YulIf",
															"src": "762:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:5",
														"type": ""
													}
												],
												"src": "648:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:5"
															},
															"nodeType": "YulIf",
															"src": "1078:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:5",
														"type": ""
													}
												],
												"src": "981:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:5",
														"type": ""
													}
												],
												"src": "1240:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:5",
																"statements": []
															},
															"src": "1712:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:5"
															},
															"nodeType": "YulIf",
															"src": "1861:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:5",
														"type": ""
													}
												],
												"src": "1432:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:5",
														"type": ""
													}
												],
												"src": "2034:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:5",
														"type": ""
													}
												],
												"src": "2438:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:5",
														"type": ""
													}
												],
												"src": "2841:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:5",
														"type": ""
													}
												],
												"src": "3199:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:5",
														"type": ""
													}
												],
												"src": "3606:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:5",
														"type": ""
													}
												],
												"src": "4012:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:5",
														"type": ""
													}
												],
												"src": "4417:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5014:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5007:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5048:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5059:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5044:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5064:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5087:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5098:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5083:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5083:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5103:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5076:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5146:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5146:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4974:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4988:4:5",
														"type": ""
													}
												],
												"src": "4823:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5306:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5317:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5336:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5329:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5329:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5253:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5264:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5275:4:5",
														"type": ""
													}
												],
												"src": "5183:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5472:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5484:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5495:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5472:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5537:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5507:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5431:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5442:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5453:4:5",
														"type": ""
													}
												],
												"src": "5365:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5602:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5637:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5658:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5665:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5670:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5661:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5661:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5702:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5695:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5695:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5695:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5730:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5733:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5723:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5723:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5723:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5618:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5625:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5621:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5621:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5615:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:13:5"
															},
															"nodeType": "YulIf",
															"src": "5612:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5757:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5768:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5771:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5764:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5757:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5585:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5588:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5594:3:5",
														"type": ""
													}
												],
												"src": "5554:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5839:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5849:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5863:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5866:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5859:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5859:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5880:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5910:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5916:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5884:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5957:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5959:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5973:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5981:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5969:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5959:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5937:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:26:5"
															},
															"nodeType": "YulIf",
															"src": "5927:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6047:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6068:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6075:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6080:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6071:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6071:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6061:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6061:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6112:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6115:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6105:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6105:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6105:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6140:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6143:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6133:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6133:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6133:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6026:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6034:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6023:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6023:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6000:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:38:5"
															},
															"nodeType": "YulIf",
															"src": "5997:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5819:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5828:6:5",
														"type": ""
													}
												],
												"src": "5784:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100c25760003560e01c8063395093511161007f57806395d89b411161005957806395d89b4114610202578063a457c2d714610217578063a9059cbb14610237578063dd62ed3e1461025757600080fd5b8063395093511461019757806370a08231146101b75780637e72fb52146101ed57600080fd5b806306fdde03146100c7578063095ea7b3146100f257806313faede61461012257806318160ddd1461014657806323b872dd1461015b578063313ce5671461017b575b600080fd5b3480156100d357600080fd5b506100dc61029d565b6040516100e991906109bc565b60405180910390f35b3480156100fe57600080fd5b5061011261010d366004610992565b61032f565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860055481565b6040519081526020016100e9565b34801561015257600080fd5b50600254610138565b34801561016757600080fd5b50610112610176366004610956565b610347565b34801561018757600080fd5b50604051601281526020016100e9565b3480156101a357600080fd5b506101126101b2366004610992565b61036b565b3480156101c357600080fd5b506101386101d2366004610901565b6001600160a01b031660009081526020819052604090205490565b6102006101fb366004610901565b6103aa565b005b34801561020e57600080fd5b506100dc6103ce565b34801561022357600080fd5b50610112610232366004610992565b6103dd565b34801561024357600080fd5b50610112610252366004610992565b610474565b34801561026357600080fd5b50610138610272366004610923565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102ac90610a37565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610a37565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60003361033d818585610482565b5060019392505050565b6000336103558582856105a6565b610360858585610638565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061033d90829086906103a5908790610a11565b610482565b60055434146103b857600080fd5b6103cb81683635c9adc5dea00000610806565b50565b6060600480546102ac90610a37565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103608286868403610482565b60003361033d818585610638565b6001600160a01b0383166104e45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045e565b6001600160a01b0382166105455760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461063257818110156106255760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161045e565b6106328484848403610482565b50505050565b6001600160a01b03831661069c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045e565b6001600160a01b0382166106fe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045e565b6001600160a01b038316600090815260208190526040902054818110156107765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161045e565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107ad908490610a11565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107f991815260200190565b60405180910390a3610632565b6001600160a01b03821661085c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045e565b806002600082825461086e9190610a11565b90915550506001600160a01b0382166000908152602081905260408120805483929061089b908490610a11565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b03811681146108fc57600080fd5b919050565b60006020828403121561091357600080fd5b61091c826108e5565b9392505050565b6000806040838503121561093657600080fd5b61093f836108e5565b915061094d602084016108e5565b90509250929050565b60008060006060848603121561096b57600080fd5b610974846108e5565b9250610982602085016108e5565b9150604084013590509250925092565b600080604083850312156109a557600080fd5b6109ae836108e5565b946020939093013593505050565b600060208083528351808285015260005b818110156109e9578581018301518582016040015282016109cd565b818111156109fb576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a3257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610a4b57607f821691505b60208210811415610a6c57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200c590dc89ca478df1ccd27da36f7530f173ea1b2cdb8f7261672517d015461bc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x7E72FB52 EQ PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x3CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xA37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xA37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x33D DUP2 DUP6 DUP6 PUSH2 0x482 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP6 DUP3 DUP6 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x360 DUP6 DUP6 DUP6 PUSH2 0x638 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x33D SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x3A5 SWAP1 DUP8 SWAP1 PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CB DUP2 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x806 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xA37 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x360 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x482 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x33D DUP2 DUP6 DUP6 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x632 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45E JUMP JUMPDEST PUSH2 0x632 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x482 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH2 0xA11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7F9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xA11 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x89B SWAP1 DUP5 SWAP1 PUSH2 0xA11 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91C DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93F DUP4 PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x94D PUSH1 0x20 DUP5 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x974 DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP3 POP PUSH2 0x982 PUSH1 0x20 DUP6 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP4 PUSH2 0x8E5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9CD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9FB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA4B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA6C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC MSIZE 0xD 0xC8 SWAP13 LOG4 PUSH25 0xDF1CCD27DA36F7530F173EA1B2CDB8F7261672517D015461BC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "113:334:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:0;;;;;:::i;:::-;;:::i;:::-;;;1405:14:5;;1398:22;1380:41;;1368:2;1353:18;4433:197:0;1240:187:5;142:26:4;;;;;;;;;;;;;;;;;;;5329:25:5;;;5317:2;5302:18;142:26:4;5183:177:5;3244:106:0;;;;;;;;;;-1:-1:-1;3331:12:0;;3244:106;;5192:286;;;;;;;;;;-1:-1:-1;5192:286:0;;;;;:::i;:::-;;:::i;3093:91::-;;;;;;;;;;-1:-1:-1;3093:91:0;;3175:2;5507:36:5;;5495:2;5480:18;3093:91:0;5365:184:5;5873:236:0;;;;;;;;;;-1:-1:-1;5873:236:0;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;;;;;-1:-1:-1;3408:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;321:123:4;;;;;;:::i;:::-;;:::i;:::-;;2367:102:0;;;;;;;;;;;;;:::i;6596:429::-;;;;;;;;;;-1:-1:-1;6596:429:0;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:0;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;;;;;-1:-1:-1;3976:149:0;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:236::-;719:10:3;5961:4:0;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:0;;;;;;;;;;5961:4;;719:10:3;6015:66:0;;719:10:3;;6040:27:0;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;321:123:4:-;397:4;;384:9;:17;376:26;;;;;;406:34;412:8;422:17;406:5;:34::i;:::-;321:123;:::o;2367:102:0:-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:3;6689:4:0;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:0;;;;;;;;;;6689:4;;719:10:3;6815:35:0;;;;6807:85;;;;-1:-1:-1;;;6807:85:0;;4619:2:5;6807:85:0;;;4601:21:5;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:5;;;4741:35;4793:19;;6807:85:0;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;10123:370::-;-1:-1:-1;;;;;10254:19:0;;10246:68;;;;-1:-1:-1;;;10246:68:0;;4214:2:5;10246:68:0;;;4196:21:5;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:5;;;4336:34;4387:19;;10246:68:0;4012:400:5;10246:68:0;-1:-1:-1;;;;;10332:21:0;;10324:68;;;;-1:-1:-1;;;10324:68:0;;2640:2:5;10324:68:0;;;2622:21:5;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:5;;;2762:32;2811:19;;10324:68:0;2438:398:5;10324:68:0;-1:-1:-1;;;;;10403:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;5329:25:5;;;10454:32:0;;5302:18:5;10454:32:0;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:0;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:0;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:0;;3043:2:5;11019:68:0;;;3025:21:5;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11019:68:0;2841:353:5;11019:68:0;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:0;;7606:68;;;;-1:-1:-1;;;7606:68:0;;3808:2:5;7606:68:0;;;3790:21:5;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:5;;;3930:35;3982:19;;7606:68:0;3606:401:5;7606:68:0;-1:-1:-1;;;;;7692:16:0;;7684:64;;;;-1:-1:-1;;;7684:64:0;;2236:2:5;7684:64:0;;;2218:21:5;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:5;;;2358:33;2408:19;;7684:64:0;2034:399:5;7684:64:0;-1:-1:-1;;;;;7830:15:0;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:0;;3401:2:5;7855:72:0;;;3383:21:5;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:5;;;3523:36;3576:19;;7855:72:0;3199:402:5;7855:72:0;-1:-1:-1;;;;;7961:15:0;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:0;8067:4;-1:-1:-1;;;;;8058:26:0;;8077:6;8058:26;;;;5329:25:5;;5317:2;5302:18;;5183:177;8058:26:0;;;;;;;;8095:37;11795:121;8415:389;-1:-1:-1;;;;;8498:21:0;;8490:65;;;;-1:-1:-1;;;8490:65:0;;5025:2:5;8490:65:0;;;5007:21:5;5064:2;5044:18;;;5037:30;5103:33;5083:18;;;5076:61;5154:18;;8490:65:0;4823:355:5;8490:65:0;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:0;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:0;;5329:25:5;;;-1:-1:-1;;;;;8701:37:0;;;8718:1;;8701:37;;5317:2:5;5302:18;8701:37:0;;;;;;;8415:389;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:5:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:5;1992:15;-1:-1:-1;;1988:29:5;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:5:o;5554:225::-;5594:3;5625:1;5621:6;5618:1;5615:13;5612:136;;;5670:10;5665:3;5661:20;5658:1;5651:31;5705:4;5702:1;5695:15;5733:4;5730:1;5723:15;5612:136;-1:-1:-1;5764:9:5;;5554:225::o;5784:380::-;5863:1;5859:12;;;;5906;;;5927:61;;5981:4;5973:6;5969:17;5959:27;;5927:61;6034:2;6026:6;6023:14;6003:18;6000:38;5997:161;;;6080:10;6075:3;6071:20;6068:1;6061:31;6115:4;6112:1;6105:15;6143:4;6140:1;6133:15;5997:161;;5784:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "545600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2585",
								"buyToken(address)": "infinite",
								"cost()": "2340",
								"decimals()": "288",
								"decreaseAllowance(address,uint256)": "26944",
								"increaseAllowance(address,uint256)": "26968",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2359",
								"transfer(address,uint256)": "51248",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 161,
									"end": 168,
									"name": "PUSH",
									"source": 4,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 142,
									"end": 168,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 142,
									"end": 168,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 174,
									"end": 318,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 236,
									"end": 241,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 236,
									"end": 241,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 243,
									"end": 250,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 243,
									"end": 250,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 263,
									"end": 273,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 275,
									"end": 295,
									"name": "PUSH",
									"source": 4,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 257,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 257,
									"end": 262,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 262,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 257,
									"end": 296,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 296,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 257,
									"end": 296,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 257,
									"end": 296,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 257,
									"end": 296,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 174,
									"end": 318,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8498,
									"end": 8519,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8498,
									"end": 8519,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1673,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1655,
									"end": 1676,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1715,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1751,
									"end": 1784,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1724,
									"end": 1785,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1802,
									"end": 1820,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1802,
									"end": 1820,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8490,
									"end": 8555,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8642,
									"end": 8648,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8638,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8626,
									"end": 8638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8626,
									"end": 8648,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8676,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8667,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8658,
									"end": 8686,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1977,
									"end": 2002,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1977,
									"end": 2002,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1977,
									"end": 2002,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8718,
									"end": 8719,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8718,
									"end": 8719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1967,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1950,
									"end": 1968,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8701,
									"end": 8738,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8415,
									"end": 8804,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2013,
									"end": 2238,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2013,
									"end": 2238,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2056,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2084,
									"end": 2085,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2080,
									"end": 2086,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2077,
									"end": 2078,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2087,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2071,
									"end": 2207,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2071,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2071,
									"end": 2207,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2129,
									"end": 2139,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2124,
									"end": 2127,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2120,
									"end": 2140,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2110,
									"end": 2141,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2161,
									"end": 2162,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2154,
									"end": 2169,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2192,
									"end": 2196,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2189,
									"end": 2190,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2182,
									"end": 2197,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2071,
									"end": 2207,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2071,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2223,
									"end": 2232,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2223,
									"end": 2232,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2238,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2243,
									"end": 2623,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2243,
									"end": 2623,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2322,
									"end": 2323,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2318,
									"end": 2330,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2318,
									"end": 2330,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2318,
									"end": 2330,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2318,
									"end": 2330,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2377,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2377,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2377,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2386,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2386,
									"end": 2447,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2444,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 2432,
									"end": 2438,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2428,
									"end": 2445,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2445,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2445,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2386,
									"end": 2447,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2386,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2493,
									"end": 2495,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2485,
									"end": 2491,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2482,
									"end": 2496,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2459,
									"end": 2497,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2456,
									"end": 2617,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2456,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2456,
									"end": 2617,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2539,
									"end": 2549,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2534,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2530,
									"end": 2550,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2527,
									"end": 2528,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2520,
									"end": 2551,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2574,
									"end": 2578,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2564,
									"end": 2579,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2602,
									"end": 2606,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2607,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2456,
									"end": 2617,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2456,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2456,
									"end": 2617,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2243,
									"end": 2623,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2243,
									"end": 2623,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2243,
									"end": 2623,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2243,
									"end": 2623,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2628,
									"end": 2755,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2628,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2689,
									"end": 2699,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2684,
									"end": 2687,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2680,
									"end": 2700,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2677,
									"end": 2678,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2670,
									"end": 2701,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2724,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2717,
									"end": 2718,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2710,
									"end": 2725,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2748,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2741,
									"end": 2742,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2734,
									"end": 2749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2628,
									"end": 2755,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2628,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 113,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 447,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c590dc89ca478df1ccd27da36f7530f173ea1b2cdb8f7261672517d015461bc64736f6c63430008070033",
									".code": [
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "7E72FB52"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "13FAEDE6"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 142,
											"end": 168,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 142,
											"end": 168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 168,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5319,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 142,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5183,
											"end": 5360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5507,
											"end": 5543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5507,
											"end": 5543,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5495,
											"end": 5497,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 444,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 321,
											"end": 444,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 444,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5873,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6040,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6015,
											"end": 6081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 397,
											"end": 401,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 397,
											"end": 401,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 393,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 384,
											"end": 401,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 376,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 376,
											"end": 402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 376,
											"end": 402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 376,
											"end": 402,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 376,
											"end": 402,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 376,
											"end": 402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 406,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 412,
											"end": 420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 422,
											"end": 439,
											"name": "PUSH",
											"source": 4,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 406,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 406,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 406,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 444,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6596,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6807,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6935,
											"end": 6940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6926,
											"end": 6986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4012,
											"end": 4412,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10246,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10324,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10493,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2841,
											"end": 3194,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7488,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3606,
											"end": 4007,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7606,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7684,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7808,
											"end": 7827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3199,
											"end": 3601,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7855,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7999,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8077,
											"end": 8083,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5319,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8804,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8415,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8498,
											"end": 8519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4823,
											"end": 5178,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8490,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8638,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8626,
											"end": 8638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5319,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8701,
											"end": 8738,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8804,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5554,
											"end": 5779,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5554,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5627,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5628,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5612,
											"end": 5748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5680,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5661,
											"end": 5681,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5702,
											"end": 5703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5737,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5738,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5748,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5612,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5779,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5784,
											"end": 6164,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5784,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5864,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5906,
											"end": 5918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5906,
											"end": 5918,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5906,
											"end": 5918,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5973,
											"end": 5979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6037,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6038,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6080,
											"end": 6090,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6075,
											"end": 6078,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6105,
											"end": 6120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6147,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6140,
											"end": 6141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6148,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 6164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 6164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 6164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 6164,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyToken(address)": "7e72fb52",
							"cost()": "13faede6",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0xb16e607298412b24b620a7a1fd5e3235994eb50f480c55da759266ae9a6bc4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d58bdfbddd633b8dda96061f99a2c9ee82bd6a23477a3766192c39f4d0d08e2a\",\"dweb:/ipfs/QmbN2s8V9bL5iP2vhATENb2cP4BKqueo85Y9ZQMmzEeEze\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							712
						],
						"ERC20": [
							587
						],
						"IERC20": [
							665
						],
						"IERC20Metadata": [
							690
						]
					},
					"id": 588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 588,
							"sourceUnit": 666,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 588,
							"sourceUnit": 691,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 588,
							"sourceUnit": 713,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 712,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 587,
							"linearizedBaseContracts": [
								587,
								690,
								665,
								712
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 587,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 587,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 587,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 587,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 587,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 587,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										677
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 587,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 587,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										689
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 587,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										596
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 587,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 587,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										614
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 587,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										624
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 587,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										634
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 587,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										646
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 587,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "5967:142:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 217,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "6040:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 219,
																	"indexExpression": {
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6052:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6040:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 221,
																"indexExpression": {
																	"id": 220,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "6059:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6040:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 222,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6070:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6015:66:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 227,
												"nodeType": "Return",
												"src": "6091:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 587,
									"src": "5873:236:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "6695:330:0",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6713:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "6705:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6705:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 241,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "6721:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6705:28:0"
											},
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6751:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "6743:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 246,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "6770:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 248,
														"indexExpression": {
															"id": 247,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "6782:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6770:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 250,
													"indexExpression": {
														"id": 249,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "6789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6770:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6743:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 253,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "6815:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 254,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "6835:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6815:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6852:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6807:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "6807:85:0"
											},
											{
												"id": 267,
												"nodeType": "UncheckedBlock",
												"src": "6902:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 260,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "6935:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 261,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 262,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "6951:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 263,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "6970:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6951:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 259,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6926:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 266,
														"nodeType": "ExpressionStatement",
														"src": "6926:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 238,
												"id": 269,
												"nodeType": "Return",
												"src": "7007:11:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6115:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6605:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6631:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "6623:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6648:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "6640:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6622:42:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "6689:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6689:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6688:6:0"
									},
									"scope": 587,
									"src": "6596:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "7596:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7614:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7630:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7622:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 283,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7622:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7622:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7614:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7634:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7606:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "7606:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7692:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7706:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7698:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 293,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7698:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7698:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7692:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7710:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "7684:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7780:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7786:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "7790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "7759:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7759:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "7759:38:0"
											},
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7816:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "7808:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"baseExpression": {
														"id": 309,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7830:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 311,
													"indexExpression": {
														"id": 310,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "7840:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7830:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7808:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "7863:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "7878:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7863:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7886:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7855:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7855:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "7855:72:0"
											},
											{
												"id": 328,
												"nodeType": "UncheckedBlock",
												"src": "7937:73:0",
												"statements": [
													{
														"expression": {
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 320,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7961:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 322,
																"indexExpression": {
																	"id": 321,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "7971:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7961:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 323,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "7979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 324,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "7993:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7979:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7961:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 327,
														"nodeType": "ExpressionStatement",
														"src": "7961:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 329,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 331,
														"indexExpression": {
															"id": 330,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8029:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8019:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 332,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8036:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8019:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "8019:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 336,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8073:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8077:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "8058:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8058:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "EmitStatement",
												"src": "8053:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8121:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "8095:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8095:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "8095:37:0"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "7031:452:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7497:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7524:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "7516:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7546:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "7538:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7566:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "7558:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7506:72:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7596:0:0"
									},
									"scope": 587,
									"src": "7488:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "8480:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8498:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8517:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8509:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 358,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8509:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8509:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8498:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8521:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8490:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "8490:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8595:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8587:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8587:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8587:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8599:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 366,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "8566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8566:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "8566:49:0"
											},
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 375,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8626:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 376,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "8642:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8626:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "8626:22:0"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 379,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8658:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 381,
														"indexExpression": {
															"id": 380,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8658:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 382,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "8680:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8658:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8658:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8718:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8710:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 386,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8710:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8710:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8731:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "8701:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8701:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "8696:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8777:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 395,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8769:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 394,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "8749:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8749:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "8749:48:0"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "8145:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8424:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "8430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "8447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8429:33:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8480:0:0"
									},
									"scope": 587,
									"src": "8415:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "9189:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9218:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 414,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9218:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9218:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9207:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9230:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "9199:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9307:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9307:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "9277:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9277:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "9277:49:0"
											},
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9345:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "9337:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"baseExpression": {
														"id": 433,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9362:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 435,
													"indexExpression": {
														"id": 434,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9362:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9337:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 438,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "9398:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 439,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "9416:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9398:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9424:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9390:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "9390:71:0"
											},
											{
												"id": 452,
												"nodeType": "UncheckedBlock",
												"src": "9471:79:0",
												"statements": [
													{
														"expression": {
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 444,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9495:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"id": 445,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9495:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 447,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "9516:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 448,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "9533:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9516:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9495:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 451,
														"nodeType": "ExpressionStatement",
														"src": "9495:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 453,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9559:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 454,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "9575:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9559:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "9559:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 458,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9623:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9615:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9615:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "9597:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9597:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "9592:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9682:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9674:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 468,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9674:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9674:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "9645:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9645:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "9645:48:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "8810:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9133:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "9139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9164:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "9156:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:33:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9189:0:0"
									},
									"scope": 587,
									"src": "9124:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "10236:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10254:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10271:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10263:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 488,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10263:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10263:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10254:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10275:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10246:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "10246:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "10332:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10351:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10343:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10343:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10343:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10332:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10355:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10324:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "10324:68:0"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 506,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10403:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 509,
															"indexExpression": {
																"id": 507,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10415:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10403:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 510,
														"indexExpression": {
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10403:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "10433:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10403:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "10403:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10463:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "10479:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "10454:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10454:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "EmitStatement",
												"src": "10449:37:0"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "9706:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10132:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10150:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10206:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10140:78:0"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10236:0:0"
									},
									"scope": 587,
									"src": "10123:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "10890:321:0",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10908:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "10900:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"id": 534,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10937:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "10944:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 533,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10927:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "10966:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 540,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10991:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 539,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10986:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10986:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10986:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "10962:243:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "11005:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 546,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "11027:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 547,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "11047:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11027:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11055:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 545,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11019:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11019:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "11019:68:0"
														},
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "11101:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 553,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11138:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 554,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "11145:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 555,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "11154:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 556,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 528,
																					"src": "11173:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11154:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 552,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "11129:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11129:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "11129:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "10499:266:0",
										"text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10779:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10812:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10804:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10860:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:78:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10890:0:0"
									},
									"scope": 587,
									"src": "10770:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "11914:2:0",
										"statements": []
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "11217:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11804:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11842:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "11834:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11864:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "11856:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11884:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "11876:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:72:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11914:0:0"
									},
									"scope": 587,
									"src": "11795:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "12622:2:0",
										"statements": []
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "11922:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12513:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12550:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "12542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12572:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "12564:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "12584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12532:72:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:0"
									},
									"scope": 587,
									"src": "12504:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 588,
							"src": "1403:11223:0",
							"usedErrors": []
						}
					],
					"src": "105:12522:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 665,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 665,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 665,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 665,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 665,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 665,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 655,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 664,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 666,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							665
						],
						"IERC20Metadata": [
							690
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 666,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 670,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "305:6:2"
									},
									"id": 671,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 669,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								665
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 690,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 690,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 686,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 690,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 691,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							712
						]
					},
					"id": 713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 712,
							"linearizedBaseContracts": [
								712
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 698,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 700,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 712,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 707,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 706,
												"id": 709,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 712,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 713,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							712
						],
						"ERC20": [
							587
						],
						"IERC20": [
							665
						],
						"IERC20Metadata": [
							690
						],
						"Token": [
							770
						]
					},
					"id": 771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 714,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 771,
							"sourceUnit": 588,
							"src": "56:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 716,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "131:5:4"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "131:5:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 770,
							"linearizedBaseContracts": [
								770,
								587,
								690,
								665,
								712
							],
							"name": "Token",
							"nameLocation": "122:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "13faede6",
									"id": 720,
									"mutability": "mutable",
									"name": "cost",
									"nameLocation": "154:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 770,
									"src": "142:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 718,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "142:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "161:7:4",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "252:66:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 732,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "263:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "263:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "275:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "286:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "292:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "286:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "275:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 731,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "257:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "257:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "257:39:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 742,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "301:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "301:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "301:13:4"
											}
										]
									},
									"id": 746,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 727,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 728,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 724,
													"src": "243:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 729,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 726,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 587,
												"src": "230:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "230:21:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "200:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "186:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 721,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "186:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "221:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "207:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "207:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "185:44:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:0:4"
									},
									"scope": 770,
									"src": "174:144:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "371:73:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 752,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "384:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "384:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 754,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "397:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "384:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "376:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "376:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "376:26:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "412:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "422:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "430:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "436:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "430:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 764,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "429:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "422:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"id": 758,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "406:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "406:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "406:34:4"
											}
										]
									},
									"functionSelector": "7e72fb52",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "330:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "347:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "339:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:18:4"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:4"
									},
									"scope": 770,
									"src": "321:123:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 771,
							"src": "113:334:4",
							"usedErrors": []
						}
					],
					"src": "31:416:4"
				},
				"id": 4
			}
		}
	}
}